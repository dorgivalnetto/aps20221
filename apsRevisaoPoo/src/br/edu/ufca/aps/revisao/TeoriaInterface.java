package br.edu.ufca.aps.revisao;

public class TeoriaInterface {

	/* Interface
	 * Tipo especial de classe, que não tem implementação
	 * Uma interface define um protocolo
	 * Classes podem implementar uma ou mais interfaces
	 * Uma interface é um contrato assinado por uma classe
	 * A interface define as responsabilidades da classe
	 * As responsabilidades são mapeadas em métodos
	 * A classe que implementa a interface implementa os métodos
	 * A interface contém somente assinatura de métodos e constantes
	 */

	/*Classe abstrata
	 * Se uma classe possui algum método sem implementação (abstrato), o modificador
	 * abstract deve preceder sua declaração
	 * Não podem ser usadas para instanciar objetos
	 * Devem ser vistas como templates para subclasses que irão dar uma
	 * implementação aos métodos abstratos
	 * Exemplo: 
	 * Classe abstrata Pagamento tem um método abstrato paga(...)
	 * Classes concretas PagamentoVisa, PagamentoCheque,
	 * PagamentoDinheiro dão comportamento ao método paga(...)
	 */
}
